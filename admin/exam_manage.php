<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8">
    <title>2N Toeic Lab - Qu·∫£n l√Ω b√†i thi</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="../public/img/logoiuh.png" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600&family=Nunito:wght@600;700;800&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="../public/libs/animate/animate.min.css" rel="stylesheet">
    <link href="../public/libs/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">

    <!-- Customized Bootstrap Stylesheet -->
    <link href="../public/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="../public/css/style.css" rel="stylesheet">

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    <style>
        /* Style cho h√†ng ƒë∆∞·ª£c ch·ªçn */
        .selected-row {
            background-color: #e0f7fa !important;
        }
        
        /* Cursor pointer cho c√°c h√†ng */
        #examTable tbody tr {
            cursor: pointer;
        }
    </style>
</head>
<body class="p-4">
    <a href="../index.php" class="btn btn-secondary">Tr·ªü l·∫°i trang ch·ªß</a> </br></br>
    <a href="#" class="btn btn-primary" id="btnAddExam">Th√™m b√†i thi</a>
    <a href="#" class="btn btn-danger" id="btnDeleteExam">X√≥a b√†i thi</a></br></br>
    <h3 class="mb-4">üìò Danh s√°ch b√†i thi</h3>
    <div class="alert alert-info">
        <i class="bi bi-info-circle"></i> Click v√†o b√†i thi ƒë·ªÉ ch·ªçn, double-click ƒë·ªÉ xem chi ti·∫øt.
    </div>
    <table class="table table-bordered table-striped table-hover" id="examTable">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Ti√™u ƒë·ªÅ</th>
                <th>Lo·∫°i</th>
                <th>Th·ªùi l∆∞·ª£ng (ph√∫t)</th>
                <th>ƒê·ªô kh√≥</th>
            </tr>
        </thead>
        <tbody>
            <!-- D·ªØ li·ªáu s·∫Ω ƒë·ªï v√†o ƒë√¢y b·∫±ng JS -->
        </tbody>
    </table>

    <!-- Modal Th√™m B√†i Thi -->
    <div class="modal fade" id="addExamModal" tabindex="-1" aria-labelledby="addExamModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addExamModalLabel">Th√™m b√†i thi m·ªõi</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addExamForm">
                        <div class="mb-3">
                            <label for="title" class="form-label">Ti√™u ƒë·ªÅ</label>
                            <input type="text" class="form-control" id="title" required>
                        </div>
                        <div class="mb-3">
                            <label for="type" class="form-label">Lo·∫°i</label>
                            <select class="form-select" id="type" required>
                                <option value="">Ch·ªçn lo·∫°i</option>
                                <option value="Reading">Reading</option>
                                <option value="Listening">Listening</option>
                                <option value="Full">Full Test</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="duration_minutes" class="form-label">Th·ªùi l∆∞·ª£ng (ph√∫t)</label>
                            <input type="number" class="form-control" id="duration_minutes" required min="1">
                        </div>
                        <div class="mb-3">
                            <label for="difficulty_level" class="form-label">ƒê·ªô kh√≥</label>
                            <select class="form-select" id="difficulty_level" required>
                                <option value="">Ch·ªçn ƒë·ªô kh√≥</option>
                                <option value="1">D·ªÖ</option>
                                <option value="2">Trung b√¨nh</option>
                                <option value="3">Kh√≥</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="json_file" class="form-label">T·∫£i file c√¢u h·ªèi (JSON)</label>
                            <input type="file" class="form-control" id="json_file" accept=".json">
                            <small class="text-muted">Ch·ªçn file JSON ch·ª©a danh s√°ch c√¢u h·ªèi</small>
                        </div>
                        <div class="mb-3">
                            <label for="questions_json" class="form-label">N·ªôi dung c√¢u h·ªèi (JSON)</label>
                            <textarea class="form-control" id="questions_json" rows="5" placeholder="N·ªôi dung JSON s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y sau khi t·∫£i file" readonly></textarea>
                            <small class="text-muted">ƒê·ªãnh d·∫°ng: [{"content":"N·ªôi dung","correct_answer":"A","option_1":"...","option_2":"...","option_3":"...","option_4":"..."}]</small>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
                    <button type="button" class="btn btn-primary" id="btnSubmitExam">L∆∞u</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal X√°c nh·∫≠n x√≥a -->
    <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteConfirmModalLabel">X√°c nh·∫≠n x√≥a</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†i thi "<span id="examTitleToDelete"></span>" kh√¥ng?</p>
                    <p class="text-danger">L∆∞u √Ω: H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c v√† s·∫Ω x√≥a t·∫•t c·∫£ c√¢u h·ªèi li√™n quan.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">H·ªßy</button>
                    <button type="button" class="btn btn-danger" id="btnConfirmDelete">X√≥a</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Bi·∫øn l∆∞u tr·ªØ ID b√†i thi ƒëang ƒë∆∞·ª£c ch·ªçn
            let selectedExamId = null;
            let selectedExamTitle = null;

            // L·∫•y danh s√°ch b√†i thi
            loadExams();

            // M·ªü modal khi nh·∫•n n√∫t th√™m b√†i thi
            document.getElementById('btnAddExam').addEventListener('click', () => {
                const addExamModal = new bootstrap.Modal(document.getElementById('addExamModal'));
                addExamModal.show();
            });

            // X·ª≠ l√Ω s·ª± ki·ªán khi ch·ªçn file JSON
            document.getElementById('json_file').addEventListener('change', (event) => {
                const file = event.target.files[0];
                if (file) {
                    // Ki·ªÉm tra file c√≥ ph·∫£i l√† JSON kh√¥ng
                    if (file.type !== 'application/json' && !file.name.endsWith('.json')) {
                        alert('Vui l√≤ng ch·ªçn file JSON!');
                        event.target.value = ''; // Reset input
                        return;
                    }

                    // ƒê·ªçc file
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        try {
                            // Ki·ªÉm tra n·ªôi dung JSON h·ª£p l·ªá
                            const jsonContent = e.target.result;
                            JSON.parse(jsonContent); // Th·ª≠ parse ƒë·ªÉ ki·ªÉm tra
                            
                            // Hi·ªÉn th·ªã n·ªôi dung v√†o textarea
                            document.getElementById('questions_json').value = jsonContent;
                        } catch (error) {
                            alert('File JSON kh√¥ng h·ª£p l·ªá: ' + error.message);
                            event.target.value = ''; // Reset input
                            document.getElementById('questions_json').value = '';
                        }
                    };
                    reader.onerror = () => {
                        alert('Kh√¥ng th·ªÉ ƒë·ªçc file!');
                        event.target.value = ''; // Reset input
                    };
                    reader.readAsText(file);
                }
            });

            // X·ª≠ l√Ω s·ª± ki·ªán submit form th√™m b√†i thi
            document.getElementById('btnSubmitExam').addEventListener('click', () => {
                const title = document.getElementById('title').value;
                const type = document.getElementById('type').value;
                const duration_minutes = document.getElementById('duration_minutes').value;
                const difficulty_level = document.getElementById('difficulty_level').value;
                const questions_json = document.getElementById('questions_json').value;

                // Ki·ªÉm tra d·ªØ li·ªáu
                if (!title || !type || !duration_minutes || !difficulty_level) {
                    alert('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b√†i thi!');
                    return;
                }

                if (!questions_json) {
                    alert('Vui l√≤ng t·∫£i file JSON c√¢u h·ªèi!');
                    return;
                }

                // Chu·∫©n b·ªã d·ªØ li·ªáu
                const examData = {
                    title: title,
                    type: type,
                    duration_minutes: duration_minutes,
                    difficulty_level: difficulty_level,
                    questions: JSON.parse(questions_json)
                };

                // G·ª≠i d·ªØ li·ªáu
                fetch('../api/exam/insert.php', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(examData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Th√™m b√†i thi th√†nh c√¥ng!');
                        // ƒê√≥ng modal
                        const addExamModal = bootstrap.Modal.getInstance(document.getElementById('addExamModal'));
                        addExamModal.hide();
                        // L√†m m·ªõi danh s√°ch
                        loadExams();
                        // Reset form
                        document.getElementById('addExamForm').reset();
                        document.getElementById('questions_json').value = '';
                    } else {
                        alert('L·ªói: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('L·ªói khi th√™m b√†i thi:', error);
                    alert('Kh√¥ng th·ªÉ th√™m b√†i thi. Vui l√≤ng th·ª≠ l·∫°i sau.');
                });
            });

            // X·ª≠ l√Ω s·ª± ki·ªán khi nh·∫•n n√∫t x√≥a b√†i thi
            document.getElementById('btnDeleteExam').addEventListener('click', () => {
                if (!selectedExamId) {
                    alert('Vui l√≤ng ch·ªçn m·ªôt b√†i thi ƒë·ªÉ x√≥a!');
                    return;
                }

                // Hi·ªÉn th·ªã t√™n b√†i thi trong modal x√°c nh·∫≠n
                document.getElementById('examTitleToDelete').textContent = selectedExamTitle;
                
                // Hi·ªÉn th·ªã modal x√°c nh·∫≠n
                const deleteConfirmModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
                deleteConfirmModal.show();
            });

            // X·ª≠ l√Ω s·ª± ki·ªán khi x√°c nh·∫≠n x√≥a
            document.getElementById('btnConfirmDelete').addEventListener('click', () => {
                if (!selectedExamId) return;

                // G·ª≠i y√™u c·∫ßu x√≥a
                fetch(`../api/exam/delete.php?id=${selectedExamId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('X√≥a b√†i thi th√†nh c√¥ng!');
                        // ƒê√≥ng modal
                        const deleteConfirmModal = bootstrap.Modal.getInstance(document.getElementById('deleteConfirmModal'));
                        deleteConfirmModal.hide();
                        // L√†m m·ªõi danh s√°ch
                        loadExams();
                        // Reset bi·∫øn l∆∞u tr·ªØ
                        selectedExamId = null;
                        selectedExamTitle = null;
                    } else {
                        alert('L·ªói: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('L·ªói khi x√≥a b√†i thi:', error);
                    alert('Kh√¥ng th·ªÉ x√≥a b√†i thi. Vui l√≤ng th·ª≠ l·∫°i sau.');
                });
            });

            // H√†m t·∫£i danh s√°ch b√†i thi
            function loadExams() {
                fetch('../api/exam/get.php')
                    .then(response => response.json())
                    .then(data => {
                        let rows = '';
                        data.forEach(exam => {
                            rows += `
                                <tr data-id="${exam.exam_id}" data-title="${exam.title}">
                                    <td>${exam.exam_id}</td>
                                    <td>${exam.title}</td>
                                    <td>${exam.type}</td>
                                    <td>${exam.duration_minutes}</td>
                                    <td>${exam.difficulty_level}</td>
                                </tr>`;
                        });
                        document.querySelector('#examTable tbody').innerHTML = rows;

                        // G·∫Øn s·ª± ki·ªán click v√† double-click cho c√°c h√†ng
                        document.querySelectorAll('#examTable tbody tr').forEach(row => {
                            // S·ª± ki·ªán click ƒë·ªÉ ch·ªçn h√†ng
                            row.addEventListener('click', () => {
                                // B·ªè ch·ªçn t·∫•t c·∫£ c√°c h√†ng kh√°c
                                document.querySelectorAll('#examTable tbody tr').forEach(r => {
                                    r.classList.remove('selected-row');
                                });
                                
                                // Ch·ªçn h√†ng hi·ªán t·∫°i
                                row.classList.add('selected-row');
                                
                                // L∆∞u ID v√† ti√™u ƒë·ªÅ b√†i thi ƒëang ch·ªçn
                                selectedExamId = row.getAttribute('data-id');
                                selectedExamTitle = row.getAttribute('data-title');
                            });
                            
                            // S·ª± ki·ªán double-click ƒë·ªÉ xem chi ti·∫øt
                            row.addEventListener('dblclick', () => {
                                const examId = row.getAttribute('data-id');
                                window.location.href = `exam_detail_manage.php?id=${examId}`;
                            });
                        });
                    })
                    .catch(error => {
                        console.error('L·ªói khi g·ªçi API:', error);
                    });
            }
        });
    </script>
</body>
</html>
